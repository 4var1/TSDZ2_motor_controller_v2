   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,4
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "adc_queue.c"
  14              	 .section .text.ADC_QUEUE_GetAppVersion,"ax",%progbits
  15              	 .align 1
  16              	 .global ADC_QUEUE_GetAppVersion
  17              	 .code 16
  18              	 .thumb_func
  20              	ADC_QUEUE_GetAppVersion:
  21 0000 0148     	 ldr r0,.L2
  22 0002 82B0     	 sub sp,sp,#8
  23 0004 02B0     	 add sp,sp,#8
  24              	 
  25 0006 7047     	 bx lr
  26              	.L3:
  27              	 .align 2
  28              	.L2:
  29 0008 04001600 	 .word 1441796
  31              	 .section .text.ADC_QUEUE_ResetListContents,"ax",%progbits
  32              	 .align 1
  33              	 .global ADC_QUEUE_ResetListContents
  34              	 .code 16
  35              	 .thumb_func
  37              	ADC_QUEUE_ResetListContents:
  38 0000 70B5     	 push {r4,r5,r6,lr}
  39 0002 041C     	 mov r4,r0
  40 0004 0A4E     	 ldr r6,.L5
  41 0006 C500     	 lsl r5,r0,#3
  42 0008 A859     	 ldr r0,[r5,r6]
  43 000a FF21     	 mov r1,#255
  44 000c 7519     	 add r5,r6,r5
  45 000e 6022     	 mov r2,#96
  46 0010 FFF7FEFF 	 bl memset
  47 0014 6868     	 ldr r0,[r5,#4]
  48 0016 FF21     	 mov r1,#255
  49 0018 6022     	 mov r2,#96
  50 001a FFF7FEFF 	 bl memset
  51 001e 0548     	 ldr r0,.L5+4
  52 0020 6401     	 lsl r4,r4,#5
  53 0022 0019     	 add r0,r0,r4
  54 0024 0021     	 mov r1,#0
  55 0026 2022     	 mov r2,#32
  56 0028 FFF7FEFF 	 bl memset
  57              	 
  58 002c 70BD     	 pop {r4,r5,r6,pc}
  59              	.L6:
  60 002e C046     	 .align 2
  61              	.L5:
  62 0030 00000000 	 .word adc_queue_list_ptrs
  63 0034 00000000 	 .word .LANCHOR0
  65              	 .section .text.ADC_QUEUE_ResetListContentsEx,"ax",%progbits
  66              	 .align 1
  67              	 .global ADC_QUEUE_ResetListContentsEx
  68              	 .code 16
  69              	 .thumb_func
  71              	ADC_QUEUE_ResetListContentsEx:
  72 0000 10B5     	 push {r4,lr}
  73 0002 041C     	 mov r4,r0
  74 0004 807E     	 ldrb r0,[r0,#26]
  75 0006 FFF7FEFF 	 bl ADC_QUEUE_ResetListContents
  76 000a 0023     	 mov r3,#0
  77              	 
  78 000c 6377     	 strb r3,[r4,#29]
  79 000e 10BD     	 pop {r4,pc}
  81              	 .section .text.ADC_QUEUE_Init,"ax",%progbits
  82              	 .align 1
  83              	 .global ADC_QUEUE_Init
  84              	 .code 16
  85              	 .thumb_func
  87              	ADC_QUEUE_Init:
  88 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
  89 0002 437E     	 ldrb r3,[r0,#25]
  90 0004 041C     	 mov r4,r0
  91 0006 022B     	 cmp r3,#2
  92 0008 61D1     	 bne .L9
  93 000a 8068     	 ldr r0,[r0,#8]
  94 000c FFF7FEFF 	 bl GLOBAL_ADC_Init
  95 0010 0325     	 mov r5,#3
  96 0012 E37E     	 ldrb r3,[r4,#27]
  97 0014 0022     	 mov r2,#0
  98 0016 2168     	 ldr r1,[r4]
  99 0018 061C     	 mov r6,r0
 100 001a E068     	 ldr r0,[r4,#12]
 101 001c FFF7FEFF 	 bl XMC_VADC_GROUP_InputClassInit
 102 0020 E068     	 ldr r0,[r4,#12]
 103 0022 6168     	 ldr r1,[r4,#4]
 104 0024 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueInit
 105 0028 E368     	 ldr r3,[r4,#12]
 106 002a 207C     	 ldrb r0,[r4,#16]
 107 002c FC33     	 add r3,r3,#252
 108 002e 9968     	 ldr r1,[r3,#8]
 109 0030 A943     	 bic r1,r5
 110 0032 9960     	 str r1,[r3,#8]
 111 0034 9A68     	 ldr r2,[r3,#8]
 112 0036 0243     	 orr r2,r0
 113 0038 9A60     	 str r2,[r3,#8]
 114 003a A07E     	 ldrb r0,[r4,#26]
 115 003c FFF7FEFF 	 bl ADC_QUEUE_lInitializeListToDefaults
 116 0040 6369     	 ldr r3,[r4,#20]
 117 0042 1A7B     	 ldrb r2,[r3,#12]
 118 0044 002A     	 cmp r2,#0
 119 0046 41D0     	 beq .L11
 120 0048 6946     	 mov r1,sp
 121 004a 1A68     	 ldr r2,[r3]
 122 004c CA71     	 strb r2,[r1,#7]
 123 004e C979     	 ldrb r1,[r1,#7]
 124 0050 9446     	 mov ip,r2
 125 0052 5A68     	 ldr r2,[r3,#4]
 126 0054 4BB2     	 sxtb r3,r1
 127 0056 9201     	 lsl r2,r2,#6
 128 0058 002B     	 cmp r3,#0
 129 005a 15DB     	 blt .L12
 130 005c 1D49     	 ldr r1,.L16
 131 005e 9B08     	 lsr r3,r3,#2
 132 0060 9B00     	 lsl r3,r3,#2
 133 0062 5B18     	 add r3,r3,r1
 134 0064 C021     	 mov r1,#192
 135 0066 8900     	 lsl r1,r1,#2
 136 0068 5F58     	 ldr r7,[r3,r1]
 137 006a 6146     	 mov r1,ip
 138 006c 2940     	 and r1,r5
 139 006e CD00     	 lsl r5,r1,#3
 140 0070 FF21     	 mov r1,#255
 141 0072 081C     	 mov r0,r1
 142 0074 A840     	 lsl r0,r0,r5
 143 0076 1140     	 and r1,r2
 144 0078 8743     	 bic r7,r0
 145 007a A940     	 lsl r1,r1,r5
 146 007c 3A1C     	 mov r2,r7
 147 007e 0A43     	 orr r2,r1
 148 0080 C021     	 mov r1,#192
 149 0082 8900     	 lsl r1,r1,#2
 150 0084 5A50     	 str r2,[r3,r1]
 151 0086 12E0     	 b .L13
 152              	.L12:
 153 0088 0F23     	 mov r3,#15
 154 008a 0B40     	 and r3,r1
 155 008c 083B     	 sub r3,r3,#8
 156 008e 1248     	 ldr r0,.L16+4
 157 0090 9B08     	 lsr r3,r3,#2
 158 0092 9B00     	 lsl r3,r3,#2
 159 0094 1B18     	 add r3,r3,r0
 160 0096 FF20     	 mov r0,#255
 161 0098 0D40     	 and r5,r1
 162 009a 011C     	 mov r1,r0
 163 009c ED00     	 lsl r5,r5,#3
 164 009e A940     	 lsl r1,r1,r5
 165 00a0 DF69     	 ldr r7,[r3,#28]
 166 00a2 1040     	 and r0,r2
 167 00a4 8F43     	 bic r7,r1
 168 00a6 A840     	 lsl r0,r0,r5
 169 00a8 3A1C     	 mov r2,r7
 170 00aa 0243     	 orr r2,r0
 171 00ac DA61     	 str r2,[r3,#28]
 172              	.L13:
 173 00ae 217E     	 ldrb r1,[r4,#24]
 174 00b0 E068     	 ldr r0,[r4,#12]
 175 00b2 FFF7FEFF 	 bl XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
 176 00b6 6369     	 ldr r3,[r4,#20]
 177 00b8 1A68     	 ldr r2,[r3]
 178 00ba 1306     	 lsl r3,r2,#24
 179 00bc 06D4     	 bmi .L11
 180 00be 1F23     	 mov r3,#31
 181 00c0 1340     	 and r3,r2
 182 00c2 0122     	 mov r2,#1
 183 00c4 9A40     	 lsl r2,r2,r3
 184 00c6 131C     	 mov r3,r2
 185 00c8 024A     	 ldr r2,.L16
 186 00ca 1360     	 str r3,[r2]
 187              	.L11:
 188 00cc 6676     	 strb r6,[r4,#25]
 189              	.L9:
 190 00ce 607E     	 ldrb r0,[r4,#25]
 191              	 
 192 00d0 FEBD     	 pop {r1,r2,r3,r4,r5,r6,r7,pc}
 193              	.L17:
 194 00d2 C046     	 .align 2
 195              	.L16:
 196 00d4 00E100E0 	 .word -536813312
 197 00d8 00ED00E0 	 .word -536810240
 199              	 .section .text.ADC_QUEUE_InsertQueueEntry,"ax",%progbits
 200              	 .align 1
 201              	 .global ADC_QUEUE_InsertQueueEntry
 202              	 .code 16
 203              	 .thumb_func
 205              	ADC_QUEUE_InsertQueueEntry:
 206 0000 F8B5     	 push {r3,r4,r5,r6,r7,lr}
 207 0002 0C26     	 mov r6,#12
 208 0004 0D1C     	 mov r5,r1
 209 0006 041C     	 mov r4,r0
 210 0008 837E     	 ldrb r3,[r0,#26]
 211 000a 4879     	 ldrb r0,[r1,#5]
 212 000c 164F     	 ldr r7,.L27
 213 000e 7043     	 mul r0,r6
 214 0010 DB00     	 lsl r3,r3,#3
 215 0012 DB59     	 ldr r3,[r3,r7]
 216 0014 321C     	 mov r2,r6
 217 0016 1818     	 add r0,r3,r0
 218 0018 FFF7FEFF 	 bl memcpy
 219 001c 2879     	 ldrb r0,[r5,#4]
 220 001e A37E     	 ldrb r3,[r4,#26]
 221 0020 7043     	 mul r0,r6
 222 0022 DB00     	 lsl r3,r3,#3
 223 0024 FB18     	 add r3,r7,r3
 224 0026 5B68     	 ldr r3,[r3,#4]
 225 0028 291C     	 mov r1,r5
 226 002a 1818     	 add r0,r3,r0
 227 002c 321C     	 mov r2,r6
 228 002e FFF7FEFF 	 bl memcpy
 229 0032 A07E     	 ldrb r0,[r4,#26]
 230 0034 0D49     	 ldr r1,.L27+4
 231 0036 2D68     	 ldr r5,[r5]
 232 0038 4701     	 lsl r7,r0,#5
 233 003a CF19     	 add r7,r1,r7
 234 003c 002D     	 cmp r5,#0
 235 003e 11D0     	 beq .L18
 236 0040 637F     	 ldrb r3,[r4,#29]
 237 0042 DAB2     	 uxtb r2,r3
 238              	.L20:
 239 0044 56B2     	 sxtb r6,r2
 240 0046 002E     	 cmp r6,#0
 241 0048 06DB     	 blt .L26
 242 004a B600     	 lsl r6,r6,#2
 243 004c F659     	 ldr r6,[r6,r7]
 244 004e AE42     	 cmp r6,r5
 245 0050 08D0     	 beq .L18
 246 0052 013A     	 sub r2,r2,#1
 247 0054 D2B2     	 uxtb r2,r2
 248 0056 F5E7     	 b .L20
 249              	.L26:
 250 0058 C000     	 lsl r0,r0,#3
 251 005a 5A1C     	 add r2,r3,#1
 252 005c C318     	 add r3,r0,r3
 253 005e 9B00     	 lsl r3,r3,#2
 254 0060 6277     	 strb r2,[r4,#29]
 255 0062 CD50     	 str r5,[r1,r3]
 256              	.L18:
 257              	 
 258 0064 F8BD     	 pop {r3,r4,r5,r6,r7,pc}
 259              	.L28:
 260 0066 C046     	 .align 2
 261              	.L27:
 262 0068 00000000 	 .word adc_queue_list_ptrs
 263 006c 00000000 	 .word .LANCHOR0
 265              	 .section .text.ADC_QUEUE_AllEntriesInserted,"ax",%progbits
 266              	 .align 1
 267              	 .global ADC_QUEUE_AllEntriesInserted
 268              	 .code 16
 269              	 .thumb_func
 271              	ADC_QUEUE_AllEntriesInserted:
 272 0000 F7B5     	 push {r0,r1,r2,r4,r5,r6,r7,lr}
 273 0002 8024     	 mov r4,#128
 274 0004 827E     	 ldrb r2,[r0,#26]
 275 0006 1949     	 ldr r1,.L37
 276 0008 D200     	 lsl r2,r2,#3
 277 000a 8A18     	 add r2,r1,r2
 278 000c 5568     	 ldr r5,[r2,#4]
 279 000e C268     	 ldr r2,[r0,#12]
 280 0010 E400     	 lsl r4,r4,#3
 281 0012 FC32     	 add r2,r2,#252
 282 0014 9168     	 ldr r1,[r2,#8]
 283 0016 2143     	 orr r1,r4
 284 0018 9160     	 str r1,[r2,#8]
 285              	.L30:
 286 001a D168     	 ldr r1,[r2,#12]
 287 001c 8906     	 lsl r1,r1,#26
 288 001e FCD5     	 bpl .L30
 289 0020 6A1D     	 add r2,r5,#5
 290 0022 6535     	 add r5,r5,#101
 291              	.L32:
 292 0024 1178     	 ldrb r1,[r2]
 293 0026 FF29     	 cmp r1,#255
 294 0028 1BD0     	 beq .L31
 295 002a 1479     	 ldrb r4,[r2,#4]
 296 002c 9778     	 ldrb r7,[r2,#2]
 297 002e 0194     	 str r4,[sp,#4]
 298 0030 1F24     	 mov r4,#31
 299 0032 2140     	 and r1,r4
 300 0034 A343     	 bic r3,r4
 301 0036 0B43     	 orr r3,r1
 302 0038 0121     	 mov r1,#1
 303 003a 6418     	 add r4,r4,r1
 304 003c 0F40     	 and r7,r1
 305 003e 7F01     	 lsl r7,r7,#5
 306 0040 A343     	 bic r3,r4
 307 0042 3B43     	 orr r3,r7
 308 0044 4027     	 mov r7,#64
 309 0046 019C     	 ldr r4,[sp,#4]
 310 0048 BB43     	 bic r3,r7
 311 004a 0C40     	 and r4,r1
 312 004c A401     	 lsl r4,r4,#6
 313 004e 2343     	 orr r3,r4
 314 0050 8024     	 mov r4,#128
 315 0052 5678     	 ldrb r6,[r2,#1]
 316 0054 A343     	 bic r3,r4
 317 0056 3140     	 and r1,r6
 318 0058 C901     	 lsl r1,r1,#7
 319 005a 0B43     	 orr r3,r1
 320 005c C168     	 ldr r1,[r0,#12]
 321 005e FC31     	 add r1,r1,#252
 322 0060 4B61     	 str r3,[r1,#20]
 323              	.L31:
 324 0062 0C32     	 add r2,r2,#12
 325 0064 AA42     	 cmp r2,r5
 326 0066 DDD1     	 bne .L32
 327              	 
 328 0068 F7BD     	 pop {r0,r1,r2,r4,r5,r6,r7,pc}
 329              	.L38:
 330 006a C046     	 .align 2
 331              	.L37:
 332 006c 00000000 	 .word adc_queue_list_ptrs
 334              	 .section .text.ADC_QUEUE_ChannelEventHandler,"ax",%progbits
 335              	 .align 1
 336              	 .global ADC_QUEUE_ChannelEventHandler
 337              	 .code 16
 338              	 .thumb_func
 340              	ADC_QUEUE_ChannelEventHandler:
 341 0000 38B5     	 push {r3,r4,r5,lr}
 342 0002 C023     	 mov r3,#192
 343 0004 C468     	 ldr r4,[r0,#12]
 344 0006 5B00     	 lsl r3,r3,#1
 345 0008 E558     	 ldr r5,[r4,r3]
 346 000a 0023     	 mov r3,#0
 347              	.L41:
 348 000c 291C     	 mov r1,r5
 349 000e 0122     	 mov r2,#1
 350 0010 D940     	 lsr r1,r1,r3
 351 0012 1142     	 tst r1,r2
 352 0014 03D1     	 bne .L40
 353 0016 9B18     	 add r3,r3,r2
 354 0018 082B     	 cmp r3,#8
 355 001a F7D1     	 bne .L41
 356 001c 0FE0     	 b .L39
 357              	.L40:
 358 001e C821     	 mov r1,#200
 359 0020 9A40     	 lsl r2,r2,r3
 360 0022 4900     	 lsl r1,r1,#1
 361 0024 6250     	 str r2,[r4,r1]
 362 0026 827E     	 ldrb r2,[r0,#26]
 363 0028 0549     	 ldr r1,.L45
 364 002a D200     	 lsl r2,r2,#3
 365 002c 5158     	 ldr r1,[r2,r1]
 366 002e 0C22     	 mov r2,#12
 367 0030 5343     	 mul r3,r2
 368 0032 CB18     	 add r3,r1,r3
 369 0034 1A7A     	 ldrb r2,[r3,#8]
 370 0036 002A     	 cmp r2,#0
 371 0038 01D0     	 beq .L39
 372 003a 1B68     	 ldr r3,[r3]
 373 003c 9847     	 blx r3
 374              	.L39:
 375              	 
 376 003e 38BD     	 pop {r3,r4,r5,pc}
 377              	.L46:
 378              	 .align 2
 379              	.L45:
 380 0040 00000000 	 .word adc_queue_list_ptrs
 382              	 .section .text.ADC_QUEUE_ReqSrcEventHandler,"ax",%progbits
 383              	 .align 1
 384              	 .global ADC_QUEUE_ReqSrcEventHandler
 385              	 .code 16
 386              	 .thumb_func
 388              	ADC_QUEUE_ReqSrcEventHandler:
 389 0000 38B5     	 push {r3,r4,r5,lr}
 390 0002 CC23     	 mov r3,#204
 391 0004 0122     	 mov r2,#1
 392 0006 C168     	 ldr r1,[r0,#12]
 393 0008 5B00     	 lsl r3,r3,#1
 394 000a CA50     	 str r2,[r1,r3]
 395 000c 847E     	 ldrb r4,[r0,#26]
 396 000e 064B     	 ldr r3,.L51
 397 0010 6401     	 lsl r4,r4,#5
 398 0012 457F     	 ldrb r5,[r0,#29]
 399 0014 1C19     	 add r4,r3,r4
 400              	.L48:
 401 0016 002D     	 cmp r5,#0
 402 0018 05D0     	 beq .L50
 403 001a AB00     	 lsl r3,r5,#2
 404 001c 043B     	 sub r3,r3,#4
 405 001e E358     	 ldr r3,[r4,r3]
 406 0020 9847     	 blx r3
 407 0022 013D     	 sub r5,r5,#1
 408 0024 F7E7     	 b .L48
 409              	.L50:
 410              	 
 411 0026 38BD     	 pop {r3,r4,r5,pc}
 412              	.L52:
 413              	 .align 2
 414              	.L51:
 415 0028 00000000 	 .word .LANCHOR0
 417              	 .comm adc_queue_list_ptrs,16,4
 418              	 .section .bss.adc_queue_callback_list,"aw",%nobits
 419              	 .align 2
 420              	 .set .LANCHOR0,.+0
 423              	adc_queue_callback_list:
 424 0000 00000000 	 .space 64
 424      00000000 
 424      00000000 
 424      00000000 
 424      00000000 
 425              	 .ident "GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20141119 (release) [ARM/embedded-4_9-branch revision 218278]"
DEFINED SYMBOLS
                            *ABS*:00000000 adc_queue.c
    {standard input}:15     .text.ADC_QUEUE_GetAppVersion:00000000 $t
    {standard input}:20     .text.ADC_QUEUE_GetAppVersion:00000000 ADC_QUEUE_GetAppVersion
    {standard input}:29     .text.ADC_QUEUE_GetAppVersion:00000008 $d
    {standard input}:32     .text.ADC_QUEUE_ResetListContents:00000000 $t
    {standard input}:37     .text.ADC_QUEUE_ResetListContents:00000000 ADC_QUEUE_ResetListContents
    {standard input}:62     .text.ADC_QUEUE_ResetListContents:00000030 $d
                            *COM*:00000010 adc_queue_list_ptrs
    {standard input}:66     .text.ADC_QUEUE_ResetListContentsEx:00000000 $t
    {standard input}:71     .text.ADC_QUEUE_ResetListContentsEx:00000000 ADC_QUEUE_ResetListContentsEx
    {standard input}:82     .text.ADC_QUEUE_Init:00000000 $t
    {standard input}:87     .text.ADC_QUEUE_Init:00000000 ADC_QUEUE_Init
    {standard input}:196    .text.ADC_QUEUE_Init:000000d4 $d
    {standard input}:200    .text.ADC_QUEUE_InsertQueueEntry:00000000 $t
    {standard input}:205    .text.ADC_QUEUE_InsertQueueEntry:00000000 ADC_QUEUE_InsertQueueEntry
    {standard input}:262    .text.ADC_QUEUE_InsertQueueEntry:00000068 $d
    {standard input}:266    .text.ADC_QUEUE_AllEntriesInserted:00000000 $t
    {standard input}:271    .text.ADC_QUEUE_AllEntriesInserted:00000000 ADC_QUEUE_AllEntriesInserted
    {standard input}:332    .text.ADC_QUEUE_AllEntriesInserted:0000006c $d
    {standard input}:335    .text.ADC_QUEUE_ChannelEventHandler:00000000 $t
    {standard input}:340    .text.ADC_QUEUE_ChannelEventHandler:00000000 ADC_QUEUE_ChannelEventHandler
    {standard input}:380    .text.ADC_QUEUE_ChannelEventHandler:00000040 $d
    {standard input}:383    .text.ADC_QUEUE_ReqSrcEventHandler:00000000 $t
    {standard input}:388    .text.ADC_QUEUE_ReqSrcEventHandler:00000000 ADC_QUEUE_ReqSrcEventHandler
    {standard input}:415    .text.ADC_QUEUE_ReqSrcEventHandler:00000028 $d
    {standard input}:419    .bss.adc_queue_callback_list:00000000 $d
    {standard input}:423    .bss.adc_queue_callback_list:00000000 adc_queue_callback_list

UNDEFINED SYMBOLS
memset
GLOBAL_ADC_Init
XMC_VADC_GROUP_InputClassInit
XMC_VADC_GROUP_QueueInit
ADC_QUEUE_lInitializeListToDefaults
XMC_VADC_GROUP_QueueSetReqSrcEventInterruptNode
memcpy
